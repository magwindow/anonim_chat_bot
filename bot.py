import telebot
from telebot import types

from database import Database
from config import TOKEN

bot = telebot.TeleBot(TOKEN)
db = Database('users.db')

def main_menu():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton('üîç –ü–æ–∏—Å–∫ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞')
    markup.add(item1)
    return markup

def stop_dialog():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton('üì¢ –°–∫–∞–∑–∞—Ç—å —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å')
    item2 = types.KeyboardButton('/stop')
    markup.add(item1, item2)
    return markup

def stop_search():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton('‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –ø–æ–∏—Å–∫')
    markup.add(item1)
    return markup


@bot.message_handler(commands=['start'])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton('üë® –Ø –ø–∞—Ä–µ–Ω—å')
    item2 = types.KeyboardButton('üë© –Ø –¥–µ–≤—É—à–∫–∞')
    markup.add(item1, item2)
    bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç, {0.first_name}!  –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∞–Ω–æ–Ω–∏–º–Ω—ã–∏ÃÜ —á–∞—Ç –±–æ—Ç. –£–∫–∞–∂–∏—Ç–µ —Å–≤–æ–∏ÃÜ –ø–æ–ª:'
                     .format(message.from_user), reply_markup=markup)
    
    
@bot.message_handler(commands=['menu'])
def menu(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton('üîç –ü–æ–∏—Å–∫ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞')
    markup.add(item1)
    bot.send_message(message.chat.id, 'üìã –ú–µ–Ω—é', reply_markup=markup) 
    

@bot.message_handler(commands=['stop'])
def stop(message):
    chat_info = db.get_active_chat(message.chat.id)  
    if chat_info:
        db.delete_chat(chat_info[0])
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        item1 = types.KeyboardButton('‚û°Ô∏è –°–ª–µ–¥—É—é—â–∏–π –¥–∏–∞–ª–æ–≥')
        item2 = types.KeyboardButton('/menu')
        markup.add(item1, item2)
        bot.send_message(chat_info[1], '–°–æ–±–µ—Å–µ–¥–Ω–∏–∫ –ø–æ–∫–∏–Ω—É–ª —á–∞—Ç', reply_markup=markup)
        bot.send_message(message.chat.id, '–í—ã –ø–æ–∫–∏–Ω—É–ª–∏ —á–∞—Ç', reply_markup=markup)
    else:
        bot.send_message(message.chat.id, '–í—ã –Ω–µ –≤ —á–∞—Ç–µ', reply_markup=markup)


@bot.message_handler(content_types=['text'])
def bot_message(message):
    if message.chat.type == 'private':
        if message.text == 'üîç –ü–æ–∏—Å–∫ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞' or message.text == '‚û°Ô∏è –°–ª–µ–¥—É—é—â–∏–π –¥–∏–∞–ª–æ–≥':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            item1 = types.KeyboardButton('üîç –ü–∞—Ä–Ω–µ–π')
            item2 = types.KeyboardButton('üîç –î–µ–≤—É—à–µ–∫')
            item3 = types.KeyboardButton('üî¥ –í—Å–µ—Ö')
            markup.add(item1, item2, item3)
            bot.send_message(message.chat.id, '–ö–æ–≥–æ –±—É–¥–µ–º –∏—Å–∫–∞—Ç—å?', reply_markup=markup)
            
        
        elif message.text == '‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –ø–æ–∏—Å–∫':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            item1 = types.KeyboardButton('üîç –ü–æ–∏—Å–∫ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞')
            markup.add(item1)
            db.remove_queue(message.chat.id)
            bot.send_message(message.chat.id, '‚ùå –ü–æ–∏—Å–∫ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω', reply_markup=markup)
            
        
        elif message.text == 'üîç –ü–∞—Ä–Ω–µ–π':
            user_info = db.get_gender_chat('male')
            chat_two = user_info[0]
            if int(chat_two) != message.chat.id:
                if not db.create_chat(message.chat.id, chat_two):
                    db.add_queue(message.chat.id, db.get_gender(message.chat.id))
                else:
                    bot.send_message(message.chat.id, 'üì£ –ü–æ–∏—Å–∫ –∑–∞–≤–µ—Ä—à–µ–Ω! –°–æ–±–µ—Å–µ–¥–Ω–∏–∫ –Ω–∞–π–¥–µ–Ω.\n–ß—Ç–æ–±—ã –∑–∞–≤–µ—Ä—à–∏—Ç—å —á–∞—Ç –Ω–∞–∂–º–∏—Ç–µ /stop', reply_markup=stop_dialog())
                    bot.send_message(chat_two, 'üì£ –ü–æ–∏—Å–∫ –∑–∞–≤–µ—Ä—à–µ–Ω! –°–æ–±–µ—Å–µ–¥–Ω–∏–∫ –Ω–∞–π–¥–µ–Ω.\n–ß—Ç–æ–±—ã –∑–∞–≤–µ—Ä—à–∏—Ç—å —á–∞—Ç –Ω–∞–∂–º–∏—Ç–µ /stop', reply_markup=stop_dialog())
            else:
                bot.send_message(message.chat.id, 'üîé –ò—â–µ–º –ø–∞—Ä–Ω–µ–π....', reply_markup=stop_search())
        
        elif message.text == 'üîç –î–µ–≤—É—à–µ–∫':
            user_info = db.get_gender_chat('female')
            chat_two = user_info[0]
            if int(chat_two) != message.chat.id:
                if not db.create_chat(message.chat.id, chat_two):
                    db.add_queue(message.chat.id, db.get_gender(message.chat.id))
                else:
                    bot.send_message(message.chat.id, 'üì£ –ü–æ–∏—Å–∫ –∑–∞–≤–µ—Ä—à–µ–Ω! –°–æ–±–µ—Å–µ–¥–Ω–∏–∫ –Ω–∞–π–¥–µ–Ω.\n–ß—Ç–æ–±—ã –∑–∞–≤–µ—Ä—à–∏—Ç—å —á–∞—Ç –Ω–∞–∂–º–∏—Ç–µ /stop', reply_markup=stop_dialog())
                    bot.send_message(chat_two, 'üì£ –ü–æ–∏—Å–∫ –∑–∞–≤–µ—Ä—à–µ–Ω! –°–æ–±–µ—Å–µ–¥–Ω–∏–∫ –Ω–∞–π–¥–µ–Ω.\n–ß—Ç–æ–±—ã –∑–∞–≤–µ—Ä—à–∏—Ç—å —á–∞—Ç –Ω–∞–∂–º–∏—Ç–µ /stop', reply_markup=stop_dialog())
            else:
                bot.send_message(message.chat.id, 'üîé –ò—â–µ–º –¥–µ–≤—É—à–µ–∫....', reply_markup=stop_search())
        
        elif message.text == 'üî¥ –í—Å–µ—Ö':
            user_info = db.get_chat()
            chat_two = user_info[0]
            if not db.create_chat(message.chat.id, chat_two):
                db.add_queue(message.chat.id, db.get_gender(message.chat.id))
                bot.send_message(message.chat.id, 'üîé –ò—â–µ–º –ª—é–¥–µ–π....', reply_markup=stop_search())
            else:
                bot.send_message(message.chat.id, 'üì£ –ü–æ–∏—Å–∫ –∑–∞–≤–µ—Ä—à–µ–Ω! –°–æ–±–µ—Å–µ–¥–Ω–∏–∫ –Ω–∞–π–¥–µ–Ω.\n–ß—Ç–æ–±—ã –∑–∞–≤–µ—Ä—à–∏—Ç—å —á–∞—Ç –Ω–∞–∂–º–∏—Ç–µ /stop', reply_markup=stop_dialog())
                bot.send_message(chat_two, 'üì£ –ü–æ–∏—Å–∫ –∑–∞–≤–µ—Ä—à–µ–Ω! –°–æ–±–µ—Å–µ–¥–Ω–∏–∫ –Ω–∞–π–¥–µ–Ω.\n–ß—Ç–æ–±—ã –∑–∞–≤–µ—Ä—à–∏—Ç—å —á–∞—Ç –Ω–∞–∂–º–∏—Ç–µ /stop', reply_markup=stop_dialog())
            
        
        elif message.text == 'üì¢ –°–∫–∞–∑–∞—Ç—å —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å':
            chat_info = db.get_active_chat(message.chat.id)
            if chat_info:
                if message.from_user.username:
                    bot.send_message(chat_info[1], '@' + message.from_user.username)
                    bot.send_message(message.chat.id, '‚úÖ –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω')
                else:
                    bot.send_message(message.chat.id, '‚ùå –£ –≤–∞—Å –Ω–µ—Ç –Ω–∏–∫–Ω–µ–∏ÃÜ–º–∞') 
            else:
                bot.send_message(message.chat.id, '–í—ã –Ω–µ –≤ —á–∞—Ç–µ')
        
        elif message.text == 'üë® –Ø –ø–∞—Ä–µ–Ω—å':
            if db.set_gender(message.chat.id, 'male'):
                bot.send_message(message.chat.id, '‚úÖ –í–∞—à –ø–æ–ª —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω', reply_markup=main_menu())
            else:
                bot.send_message(message.chat.id, 'üìù –í–∞—à –ø–æ–ª —É–∂–µ —É–∫–∞–∑–∞–Ω')   
                
        elif message.text == 'üë© –Ø –¥–µ–≤—É—à–∫–∞':    
            if db.set_gender(message.chat.id, 'female'):
                bot.send_message(message.chat.id, '‚úÖ –í–∞—à –ø–æ–ª —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω', reply_markup=main_menu())
            else:
                bot.send_message(message.chat.id, 'üìù –í–∞—à –ø–æ–ª —É–∂–µ —É–∫–∞–∑–∞–Ω')
        
        else:
            if db.get_active_chat(message.chat.id):
                chat_info = db.get_active_chat(message.chat.id)
                bot.send_message(chat_info[1], message.text)
            else:
                bot.send_message(message.chat.id, '–í—ã –Ω–µ –≤ —á–∞—Ç–µ')
                

@bot.message_handler(content_types=['sticker'])
def bot_stickers(message):
    if message.chat.type == 'private':
        chat_info = db.get_active_chat(message.chat.id)
        if chat_info:
            bot.send_sticker(chat_info[1], message.sticker.file_id)
    else:
        bot.send_message(message.chat.id, '–í—ã –Ω–µ –≤ —á–∞—Ç–µ')
        

@bot.message_handler(content_types=['voice'])
def bot_voice(message):
    if message.chat.type == 'private':
        chat_info = db.get_active_chat(message.chat.id)
        if chat_info:
            bot.send_voice(chat_info[1], message.voice.file_id)
    else:
        bot.send_message(message.chat.id, '–í—ã –Ω–µ –≤ —á–∞—Ç–µ')
            
            

    
bot.polling(none_stop=True)